name: 'Build and Push Container Images'

"on":
  pull_request:
    branches:
      - main
    types:
      - closed
  workflow_dispatch: {}

jobs:
  check_if_code_changed:
    name: 'Check if code changed'
    runs-on: ubuntu-latest

    steps:
      - name: 'Checkout code'
        uses: actions/checkout@v4

      - name: Detect webhook-certificator source code changed
        uses: dorny/paths-filter@v3
        id: changes_webhook_certificator
        with:
          filters: |
            source_code:
              - cmd/**
              - .github/workflows/build-push-webhook-certificator-images.yml
    outputs:
      check_webhook_certificator: ${{ steps.changes_webhook_certificator.outputs.source_code }}
    
  get_image_version:
    name: Get image version
    if: |
      github.event.pull_request.merged == true ||  github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    permissions:
      # required to read from the repo
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get image version
        id: get_image_version
        run: |
          short_sha="$(git rev-parse --short=7 HEAD)"
          echo "short_sha=${short_sha}"
          echo "short_sha=${short_sha}" >> "${GITHUB_OUTPUT}"
    outputs:
      short_sha: ${{ steps.get_image_version.outputs.short_sha }}
    
  build_and_push_webhook_certificator_images:
    name: Build and push webhook-certificator images
    needs:
      - get_image_version
      - check_if_code_changed
    runs-on: ubuntu-latest
    permissions:
      # required to read from the repo
      contents: read
      # required to obtain Google Cloud service account credentials
      id-token: write
    env:
      SHORT_SHA: ${{ needs.get_image_version.outputs.short_sha }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GHA_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: mex-ad-wh-cert-pr-mrg-wf-main@prefect-org-github-actions.iam.gserviceaccount.com
      - name: Configure Google Cloud credential helper
        run: gcloud auth configure-docker --quiet us-docker.pkg.dev
      # only build new image if source code was updated
      - name: Build container image
        if: needs.check_if_code_changed.outputs.check_webhook_certificator == 'true'
        run: |
          docker build  "${{ github.workspace }}" --no-cache -t local-mex-admission-webhook-certificator:${{ env.SHORT_SHA }} .
      # otherwise, fetch the :latest image from dev
      - name: Fetch latest token-injector image from dev-mex-aws-token-injector
        if: needs.check_if_code_changed.outputs.check_webhook_certificator == 'false'
        run: |
          docker pull us-docker.pkg.dev/prefect-dev-cloud2/mex-admission-webhook-certificator/mex-admission-webhook-certificator:latest
          docker tag us-docker.pkg.dev/prefect-dev-cloud2/mex-admission-webhook-certificator/mex-admission-webhook-certificator:latest "local-mex-admission-webhook-certificator:${{ env.SHORT_SHA }}"

      - name: Push local-mex-admission-webhook-certificator to dev-mex-admission-webhook-certificator, stg-mex-admission-webhook-certificator
        run: |
          target_repos=(
            prefect-dev-cloud2/mex-admission-webhook-certificator/mex-admission-webhook-certificator
            prefect-stg-cloud2/mex-admission-webhook-certificator/mex-admission-webhook-certificator
          )
          for repo in "${target_repos[@]}"; do
            docker tag "local-mex-admission-webhook-certificator:${{ env.SHORT_SHA }}" "us-docker.pkg.dev/${repo}:${{ env.SHORT_SHA }}"
            docker tag "local-mex-admission-webhook-certificator:${{ env.SHORT_SHA }}" "us-docker.pkg.dev/${repo}:latest"
            docker push "us-docker.pkg.dev/${repo}" --all-tags
          done

